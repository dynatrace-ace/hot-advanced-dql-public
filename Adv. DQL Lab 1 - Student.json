{"version":"6","defaultTimeframe":{"from":"now()-24h","to":"now()"},"defaultSegments":[],"sections":[{"id":"c451fe3a-eb09-4a1e-a431-489efcf8dadd","type":"markdown","markdown":"# Adv. DQL - Lab 1\n## Robust/Adv DQL\n---"},{"id":"e5fc7cd9-a830-434c-954b-6b13ce17a1e9","type":"markdown","markdown":"## 1.1 Learn DQL APP\n\nAn app deployed to all SAAS environments to help you get to grips with DQL\n\n[Learn DQL App](https://wkf10640.apps.dynatrace.com/ui/apps/dynatrace.learndql/)"},{"id":"7529832a-122f-42fa-abd0-596d739a0bdc","type":"markdown","markdown":"### 1.2 Summarizing Picking Times from ACME Warehouses\n\nAs a business analytics engineer at ACME Retail, your goal is to analyze the time it takes to pick items in the warehouse. The warehouse system's bizevents are already being ingested, but they need some transformation to derive the picking times.\n\n**Task**\n- Explore the bizevents with the provider `acme.retail`\n\nHints\n1. Fetch Business Events, retrieve all business events from the bizevents dataset.\n2. Ensure that only events from the provider \"acme.retail\" are included. Filter by Event Provider.\n\n"},{"id":"d1155bf4-a60e-4cb8-9012-aeb4dcf5491b","type":"dql","filterSegments":[],"drilldownPath":[],"previousFilterSegments":[],"state":{"input":{"timeframe":{"from":"now()-24h","to":"now()"},"value":""},"visualizationSettings":{"thresholds":[],"chartSettings":{"gapPolicy":"gap","circleChartSettings":{"groupingThresholdType":"relative","groupingThresholdValue":0,"valueType":"relative"},"categoryOverrides":{},"curve":"linear","pointsDisplay":"auto","categoricalBarChartSettings":{"layout":"horizontal","categoryAxisTickLayout":"horizontal","scale":"absolute","groupMode":"stacked","colorPaletteMode":"multi-color","valueAxisScale":"linear"},"colorPalette":"categorical","valueRepresentation":"absolute","truncationMode":"middle"},"singleValue":{"showLabel":true,"label":"","prefixIcon":"AnalyticsIcon","isIconVisible":false,"alignment":"center","colorThresholdTarget":"value"},"table":{"rowDensity":"condensed","enableSparklines":false,"hiddenColumns":[],"linewrapEnabled":false,"lineWrapIds":[],"monospacedFontEnabled":false,"monospacedFontColumns":[],"firstVisibleRowIndex":0,"columnWidths":{},"columnTypeOverrides":[]},"honeycomb":{"shape":"hexagon","legend":{"hidden":false,"position":"auto","ratio":"auto"},"dataMappings":{},"displayedFields":[],"truncationMode":"middle","labels":{"showLabels":false},"colorMode":"color-palette","colorPalette":"categorical"},"histogram":{"legend":{"position":"auto"},"yAxis":{"label":"Frequency","isLabelVisible":true,"scale":"linear"},"colorPalette":"categorical","dataMappings":[],"variant":"single","truncationMode":"middle"},"valueBoundaries":{"min":"auto","max":"auto"}},"querySettings":{"maxResultRecords":1000,"defaultScanLimitGbytes":500,"maxResultMegaBytes":1,"defaultSamplingRatio":10,"enableSampling":false},"davis":{"includeLogs":true,"davisVisualization":{"isAvailable":true}},"state":"idle"}},{"id":"c614ec6c-f12e-4f3e-9404-40558191d0e1","type":"markdown","markdown":"### 1.3 Correlating Events for Order Summaries\n\nCurrently, there is no explicit pick time available in the item.picked bizevents. While it is possible to request the warehouse developers to add this information, that could take weeks and cost additional development time.\n\nFortunately, we can still correlate different bizevents for each order to calculate the picking time.\n\n**Task**\n\n- Summarize the events related to each order.\n\nHints\n\n1. Fetch Business Events, retrieve all business events from the bizevents dataset.\n2. Ensure that only events from the provider \"acme.retail\" are included. Filter by Event Provider.\n    - Keep an eye on the different event.{string} bizevent attributes.\n    - Pick an attribute that make sense to use the *summarize* command on. order.id appears to correlate each individual order.\n    - Use the `collectArray()` aggregation function that helps you *collect* a group of related bizevents together. \n3. Follow up the summarize command with a \"*by*\" parameter. "},{"id":"abb52285-aa4e-4bb9-973a-7f7662a5da53","type":"dql","filterSegments":[],"drilldownPath":[],"previousFilterSegments":[],"state":{"input":{"timeframe":{"from":"now()-24h","to":"now()"},"value":""},"visualizationSettings":{"thresholds":[],"chartSettings":{"gapPolicy":"gap","circleChartSettings":{"groupingThresholdType":"relative","groupingThresholdValue":0,"valueType":"relative"},"categoryOverrides":{},"curve":"linear","pointsDisplay":"auto","categoricalBarChartSettings":{"layout":"horizontal","categoryAxisTickLayout":"horizontal","scale":"absolute","groupMode":"stacked","colorPaletteMode":"multi-color","valueAxisScale":"linear"},"colorPalette":"categorical","valueRepresentation":"absolute","truncationMode":"middle"},"singleValue":{"showLabel":true,"label":"","prefixIcon":"AnalyticsIcon","isIconVisible":false,"alignment":"center","colorThresholdTarget":"value"},"table":{"rowDensity":"condensed","enableSparklines":false,"hiddenColumns":[],"linewrapEnabled":false,"lineWrapIds":[],"monospacedFontEnabled":false,"monospacedFontColumns":[],"firstVisibleRowIndex":0,"columnWidths":{},"columnTypeOverrides":[]},"honeycomb":{"shape":"hexagon","legend":{"hidden":false,"position":"auto","ratio":"auto"},"dataMappings":{},"displayedFields":[],"truncationMode":"middle","labels":{"showLabels":false},"colorMode":"color-palette","colorPalette":"categorical"},"histogram":{"legend":{"position":"auto"},"yAxis":{"label":"Frequency","isLabelVisible":true,"scale":"linear"},"colorPalette":"categorical","dataMappings":[],"variant":"single","truncationMode":"middle"},"valueBoundaries":{"min":"auto","max":"auto"}},"querySettings":{"maxResultRecords":1000,"defaultScanLimitGbytes":500,"maxResultMegaBytes":1,"defaultSamplingRatio":10,"enableSampling":false},"davis":{"includeLogs":true,"davisVisualization":{"isAvailable":true}},"state":"idle"}},{"id":"acc69aba-0e16-434a-8908-bc611c13ca56","type":"markdown","markdown":"### 1.4 Calculating Pick Time Between Events\n\nYou can see that there are multiple events per order, and you can correlate them together. Great! The events we are interested in are warehouse.received and the last item.picked. The pick time is the time difference between these two events.\n\n**Task:**\n\n- Calculate the pick time for each order by finding the time difference between the warehouse.received event and the last item.picked event.\n\n Hints:\n\n1. Fetch Business Events, retrieve all business events from the bizevents dataset.\n2. Ensure that only events from the provider \"acme.retail\" are included. Filter by Event Provider.\n3. Narrow down the events to those of type \"warehouse.received\". Filter by Event Type.\n4. Add Field for item.picked by looking up events of type \"item.picked\" that match the order.id from the current events. Make use of the ```lookup``` command.\n5. Remove any events where item.picked is null using the `FilterOut` command.\n6. Calculate the time difference between when the item was picked and the current event's timestamp, storing it in a new field timeToPick.\n7. Select the following relevant fields to be included in the output: item.picked[timestamp], order.id, timeToPick, timestamp, and location."},{"id":"9144ecbb-dddc-430c-a1e9-264b2fa48f6e","type":"dql","filterSegments":[],"drilldownPath":[],"previousFilterSegments":[],"state":{"input":{"timeframe":{"from":"now()-24h","to":"now()"},"value":""},"visualizationSettings":{"thresholds":[],"chartSettings":{"gapPolicy":"gap","circleChartSettings":{"groupingThresholdType":"relative","groupingThresholdValue":0,"valueType":"relative"},"categoryOverrides":{},"curve":"linear","pointsDisplay":"auto","categoricalBarChartSettings":{"layout":"horizontal","categoryAxisTickLayout":"horizontal","scale":"absolute","groupMode":"stacked","colorPaletteMode":"multi-color","valueAxisScale":"linear"},"colorPalette":"categorical","valueRepresentation":"absolute","truncationMode":"middle"},"singleValue":{"showLabel":true,"label":"","prefixIcon":"AnalyticsIcon","isIconVisible":false,"alignment":"center","colorThresholdTarget":"value"},"table":{"rowDensity":"condensed","enableSparklines":false,"hiddenColumns":[],"linewrapEnabled":false,"lineWrapIds":[],"monospacedFontEnabled":false,"monospacedFontColumns":[],"firstVisibleRowIndex":0,"columnWidths":{},"columnTypeOverrides":[]},"honeycomb":{"shape":"hexagon","legend":{"hidden":false,"position":"auto","ratio":"auto"},"dataMappings":{},"displayedFields":[],"truncationMode":"middle","labels":{"showLabels":false},"colorMode":"color-palette","colorPalette":"categorical"},"histogram":{"legend":{"position":"auto"},"yAxis":{"label":"Frequency","isLabelVisible":true,"scale":"linear"},"colorPalette":"categorical","dataMappings":[],"variant":"single","truncationMode":"middle"},"valueBoundaries":{"min":"auto","max":"auto"},"autoSelectVisualization":true},"querySettings":{"maxResultRecords":1000,"defaultScanLimitGbytes":500,"maxResultMegaBytes":1,"defaultSamplingRatio":10,"enableSampling":false},"state":"idle","davis":{"includeLogs":true,"davisVisualization":{"isAvailable":true}}}},{"id":"e3fee9d8-2c8e-4453-b291-d5947ee86652","type":"markdown","markdown":"### 1.5 Summarizing Pick Time Per Warehouse\n\nNow that you've got the raw data, it's time to summarize it into something useful.\n\n**Task**:\n\n- Summarize the data to list the pick time for each warehouse.\n- Add an SLO (Service Level Objective) calculation: mark ðŸ”´ if the pick time is greater than 45 minutes and ðŸŸ¢ if it is less than 45 minutes. *extra: try doing this in DQL or using thresholds in the table*\n- Sort the results by pick time, with the slowest first.\n\n**Hints**:\n1. Fetch Business Events, retrieve all business events from the bizevents dataset.\n2. Ensure that only events from the provider \"acme.retail\" are included. Filter by Event Provider.\n3. Narrow down the events to those of type \"warehouse.received\". Filter by Event Type.\n4. Add Field for item.picked by looking up events of type \"item.picked\" that match the order.id from the current events. Make use of the ```lookup``` command.\n5. Remove any events where item.picked is null using the `FilterOut` command.\n6. Calculate the time difference between when the item was picked and the current event's timestamp, storing it in a new field timeToPick.\n7. Select the following relevant fields to be included in the output: item.picked[timestamp], order.id, timeToPick, timestamp, and location.\n8. Summarize Average Time to Pick by Location.\n9. Calculate the average timeToPick for each location and store it in a new field, lets say x.\n10. Add a new field SLO that indicates whether the average time to pick is within the service level objective (SLO). If x is less than 45 minutes, it shows a green circle (ðŸŸ¢); otherwise, it shows a red circle (ðŸ”´).\n12. Sort the results by the average time to pick in descending order."},{"id":"8ed27054-5344-48d9-9231-4c4d7996e40f","type":"dql","filterSegments":[],"drilldownPath":[],"previousFilterSegments":[],"state":{"input":{"timeframe":{"from":"now()-24h","to":"now()"},"value":""},"visualizationSettings":{"thresholds":[],"chartSettings":{"gapPolicy":"gap","circleChartSettings":{"groupingThresholdType":"relative","groupingThresholdValue":0,"valueType":"relative"},"categoryOverrides":{},"curve":"linear","pointsDisplay":"auto","categoricalBarChartSettings":{"layout":"horizontal","categoryAxisTickLayout":"horizontal","scale":"absolute","groupMode":"stacked","colorPaletteMode":"multi-color","valueAxisScale":"linear"},"colorPalette":"categorical","valueRepresentation":"absolute","truncationMode":"middle"},"singleValue":{"showLabel":true,"label":"","prefixIcon":"AnalyticsIcon","isIconVisible":false,"alignment":"center","colorThresholdTarget":"value"},"table":{"rowDensity":"condensed","enableSparklines":false,"hiddenColumns":[],"linewrapEnabled":false,"lineWrapIds":[],"monospacedFontEnabled":false,"monospacedFontColumns":[],"firstVisibleRowIndex":0,"columnWidths":{},"columnTypeOverrides":[]},"honeycomb":{"shape":"hexagon","legend":{"hidden":false,"position":"auto","ratio":"auto"},"dataMappings":{},"displayedFields":[],"truncationMode":"middle","labels":{"showLabels":false},"colorMode":"color-palette","colorPalette":"categorical"},"histogram":{"legend":{"position":"auto"},"yAxis":{"label":"Frequency","isLabelVisible":true,"scale":"linear"},"colorPalette":"categorical","dataMappings":[],"variant":"single","truncationMode":"middle"},"valueBoundaries":{"min":"auto","max":"auto"},"autoSelectVisualization":true},"querySettings":{"maxResultRecords":1000,"defaultScanLimitGbytes":500,"maxResultMegaBytes":1,"defaultSamplingRatio":10,"enableSampling":false},"state":"idle","davis":{"includeLogs":true,"davisVisualization":{"isAvailable":true}}}},{"id":"d5652bf3-f010-4e61-88ee-06601bcfc7f4","type":"markdown","markdown":"### 1.6 Spotting trends\n\nWe've identified the locations that aren't meeting the objective but can we go a step further and spot trends.\n\n**Task**:\n\n- Create a timeseries output that shows times of day when the location isn't achieving the objective\n- Add a thresholds to clearly show the times that are above the target\n- Colour the data itself with red or green based on objective\n\n**Hints**:\n1. Fetch Business Events, retrieve all business events from the bizevents dataset.\n2. Ensure that only events from the provider \"acme.retail\" are included. Filter by Event Provider.\n3. Narrow down the events to those of type \"warehouse.received\". Filter by Event Type.\n4. Add Field for item.picked by looking up events of type \"item.picked\" that match the order.id from the current events. Make use of the ```lookup``` command.\n5. Remove any events where item.picked is null using the `FilterOut` command.\n6. Calculate the time difference between when the item was picked and the current event's timestamp, storing it in a new field timeToPick.\n7. Select the following relevant fields to be included in the output: item.picked[timestamp], order.id, timeToPick, timestamp, and location.\n8. Summarize Average Time to Pick by Location.\n9. Create Timeseries for Average Time to Pick: Generate a timeseries for the average timeToPick, using the event's timestamp.\n10. Since Dynatrace uses ns by default, convert the average timeToPick from nanoseconds to minutes by dividing by 6e10.\n11. Add a new field that includes AvgTimetoPick values greater than or equal to 45 minutes.\n12. Add a new field that includes AvgTimetoPick values less than 45 minutes.\n13. Remove the AvgTimetoPick field from the output."},{"id":"3810cb8f-e21c-4454-ab02-89ac97a45ff9","type":"dql","filterSegments":[],"drilldownPath":[],"previousFilterSegments":[],"state":{"input":{"timeframe":{"from":"now()-24h","to":"now()"},"value":""},"visualizationSettings":{"thresholds":[],"chartSettings":{"gapPolicy":"gap","circleChartSettings":{"groupingThresholdType":"relative","groupingThresholdValue":0,"valueType":"relative"},"categoryOverrides":{},"curve":"linear","pointsDisplay":"auto","categoricalBarChartSettings":{"layout":"horizontal","categoryAxisTickLayout":"horizontal","scale":"absolute","groupMode":"stacked","colorPaletteMode":"multi-color","valueAxisScale":"linear"},"colorPalette":"categorical","valueRepresentation":"absolute","truncationMode":"middle"},"singleValue":{"showLabel":true,"label":"","prefixIcon":"AnalyticsIcon","isIconVisible":false,"alignment":"center","colorThresholdTarget":"value"},"table":{"rowDensity":"condensed","enableSparklines":false,"hiddenColumns":[],"linewrapEnabled":false,"lineWrapIds":[],"monospacedFontEnabled":false,"monospacedFontColumns":[],"firstVisibleRowIndex":0,"columnWidths":{},"columnTypeOverrides":[]},"honeycomb":{"shape":"hexagon","legend":{"hidden":false,"position":"auto","ratio":"auto"},"dataMappings":{},"displayedFields":[],"truncationMode":"middle","labels":{"showLabels":false},"colorMode":"color-palette","colorPalette":"categorical"},"histogram":{"legend":{"position":"auto"},"yAxis":{"label":"Frequency","isLabelVisible":true,"scale":"linear"},"colorPalette":"categorical","dataMappings":[],"variant":"single","truncationMode":"middle"},"valueBoundaries":{"min":"auto","max":"auto"},"autoSelectVisualization":true},"querySettings":{"maxResultRecords":1000,"defaultScanLimitGbytes":500,"maxResultMegaBytes":1,"defaultSamplingRatio":10,"enableSampling":false},"state":"idle","davis":{"includeLogs":true,"davisVisualization":{"isAvailable":true}}}}]}